var c=Object.defineProperty;var i=(a,e)=>c(a,"name",{value:e,configurable:!0});import{Q as p}from"./stories.settings-7ac24d87.js";import{c as d}from"./dom.utils-bd8c7a66.js";import{r as h}from"./index-d23035ce.js";import{E as n,a as o}from"./layout.settings-9902fce9.js";import{l as u}from"./log.utils-f56af116.js";import{j as g}from"./jsx-runtime-bb315772.js";import"./es.object.get-own-property-descriptor-89e834e9.js";function y({ariaLabel:a,theme:e,emphasis:s,children:r,qa:m}){const t=parseInt(r),l=d({"a-badge":!0,[`a-badge--${e}`]:!!e,[`a-badge--${n[s||o]}`]:!!n[s||o]});return h.exports.useEffect(()=>{isNaN(t)&&u("Using the Badge Component with a non-numerical value")},[r]),g("span",{className:l,"aria-label":a,"data-qa":m,children:isNaN(t)?"":`${t}`})}i(y,"Badge");const E={title:"React/Atoms/Badge",component:y,parameters:{docs:{description:{component:"A badge is a small numeric label that accompanies other elements, such as text, links, tabs, icons, etc., and can be used to indicate a value associated with the accompanying element. A prime use-case example of a badge is for denoting how many new messages or notifications are unread or awaiting the user in an inbox."}}},args:{children:"1"},argTypes:{children:{control:{type:"text"},table:{type:{summary:"integer"},defaultValue:{summary:""}},description:"The content of the badge is passed as the `children` prop. It will only display numeric values."},emphasis:{control:{type:"select"},options:["high","medium","low"],table:{type:{summary:"string"},defaultValue:{summary:""}},description:"Badges are available in 3 different types, with each providing either a high, medium or low emphasis. The high emphasis is the default type and requires no extra type parameter. The medium emphasis uses the *outlined* type. The low emphasis uses the *transparent* type."},theme:{control:{type:"select"},options:["primary","neutral"],table:{type:{summary:"string"},defaultValue:{summary:""}},description:"Badges can also be themed to reflect the context in which they are being used. The theme parameter can be omitted for the neutral style."},ariaLabel:{control:{type:"text"},table:{type:{summary:"string"}},description:"The `ariaLabel` describes an accessible name for the badge component."},qa:p}},N="",v=["badge"];export{v as __namedExportsOrder,N as badge,E as default};
//# sourceMappingURL=Badge.stories-d105b0c6.js.map
