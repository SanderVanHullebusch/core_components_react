import{Q as i,j as s}from"./stories.settings-7040e2b8.js";import{B as n}from"./Button-1920ecaa.js";import"./index-61bf1805.js";import"./_commonjsHelpers-de833af9.js";import"./dom.utils-26b7419a.js";import"./layout.settings-581780cb.js";import"./render.utils-2b079e3b.js";import"./Avatar-0467fc58.js";import"./settings-2256c0f5.js";import"./Icon-b88d001d.js";import"./log.utils-973a80c9.js";import"./Spinner-d608c31b.js";const k={title:"React/Atoms/Button",component:n,parameters:{docs:{description:{component:"Buttons are the primary call-to-action components by which we allow users to take action. Buttons are used for actions that affect the front-end or back-end."}}},args:{fullWidth:!1,children:"Click me",disabled:!1},argTypes:{id:{control:{type:"text"},table:{type:{summary:"string"}},description:"The `id` attribute of the rendered HTML button."},title:{control:{type:"text"},table:{type:{summary:"string"}},description:"The `title` attribute of the rendered HTML button."},size:{control:{type:"select"},table:{type:{summary:"string"}},options:["small","medium","large"],description:"Set the size of the button, `medium` is the default and can be omitted."},disabled:{control:{type:"boolean"},table:{type:{summary:"boolean"},defaultValue:{summary:!1}},description:"Set the state of the button to disabled."},emphasis:{control:{type:"select"},table:{type:{summary:"boolean"},defaultValue:{summary:"high"}},options:["high","medium","low"],description:"Set the button emphasis to high (default type), medium (outlined type) or low (transparent type)."},theme:{control:{type:"select"},table:{type:{summary:"string"},defaultValue:{summary:""}},description:"Buttons can also be themed to reflect the context in which they are being use. (High emphasis buttons are not available in the neutral theme).",options:["success","warning","danger","neutral"]},fullWidth:{control:{type:"boolean"},table:{type:{summary:"boolean"},defaultValue:{summary:!1}},description:"The button can have a scalable width and take up the full width of the parent container."},addOn:{control:{type:"object"},table:{type:{summary:"object"}},description:'Set the add-on inside the button. The `addOn` prop is an object with following fields _{type: "avatar" | "icon" | "spinner", align?: "left" | "center" | "right", avatarProps?: AvatarProps, iconProps?: IconProps }_. The default align is `center` and makes the button an icon button.'},onClick:{control:{type:"function"},table:{type:{summary:"function"}},action:"clicked",description:"Function that is triggered when the button is clicked."},children:{control:{type:"text"},table:{type:{summary:"ReactNode | string"}},description:"React Node(s) inside the button component."},htmlType:{control:{type:"select"},table:{type:{summary:"string"},defaultValue:{summary:"button"}},description:"The (HTML) type of the button. Can be `button`, `submit` or `reset`.",options:["button","submit","reset"]},ariaLabel:{table:{type:{summary:"string"}},control:{type:"text"},description:"The `ariaLabel` describes an accessible name for the avatar component. Required for icon buttons."},qa:i}},l=r=>s(n,{...r}),t=l.bind({});var e,o,a;t.parameters={...t.parameters,docs:{...(e=t.parameters)==null?void 0:e.docs,source:{originalSource:"args => <Button {...args} />",...(a=(o=t.parameters)==null?void 0:o.docs)==null?void 0:a.source}}};const x=["button"];export{x as __namedExportsOrder,t as button,k as default};
//# sourceMappingURL=Button.stories-d89c0096.js.map
