import{j as t,Q as l}from"./stories.settings-7040e2b8.js";import{F as s}from"./FunctionalList-243252a1.js";import{L as o}from"./ListItem-e5ca6430.js";import"./index-61bf1805.js";import"./_commonjsHelpers-de833af9.js";import"./dom.utils-26b7419a.js";import"./Icon-b88d001d.js";import"./settings-2256c0f5.js";import"./log.utils-973a80c9.js";const g={title:"React/Atoms/List/FunctionalList",component:s,parameters:{docs:{description:{component:"Use lists to better organise the text. A list breaks the information into manageable chunks, making the text easier to read for the user."}}},args:{type:"",ordered:!1,lined:!0,flushed:!1,children:[t(o,{id:"1",name:"first",active:!0,link:{href:"#"},children:"First active item"},"1"),t(o,{id:"2",name:"second",iconLeft:"mouse",iconRight:"arrow-right-1",link:{href:"#"},children:"Second clickable item"},"2"),t(o,{id:"3",name:"third",children:"Third item"},"3")]},argTypes:{type:{control:!1,table:{type:{summary:"string"},defaultValue:{summary:""}},description:"Set the type of list to `avatar` or `checkbox`. This transforms the `FunctionalList` in an avatar list or checkbox list. The components `AvatarList` and `CheckboxList` can be used as syntactic sugar."},ordered:{control:{type:"boolean"},table:{type:{summary:"boolean"},defaultValue:{summary:!1}},description:"The ordered prop switches the default unordered list to an ordered list."},lined:{control:{type:"boolean"},table:{type:{summary:"boolean"},defaultValue:{summary:!1}},description:"The `lined` prop add lines between the items of a list."},flushed:{control:{type:"boolean"},table:{type:{summary:"boolean"},defaultValue:{summary:!1}},description:"The `flushed` prop removes the top and bottom lines of a lined list. "},children:{control:!1,table:{type:{summary:"ReactElement[]"}},description:"A functional list can accept three types of children: `ListItem`, `ListItemAvatar` or `ListItemCheckbox`. Depending on what sort of children you use in the functional list, use the correct `type` prop."},onItemClick:{control:{type:"function"},table:{type:{summary:"function"}},action:"onItemClick",description:"Function triggered when a list item is clicked. First parameter of this function the `name` prop of the `ListItem`. It can be overriden by `onClick` prop on the item self."},qa:l}},c=n=>t(s,{...n}),e=c.bind({});var i,r,a;e.parameters={...e.parameters,docs:{...(i=e.parameters)==null?void 0:i.docs,source:{originalSource:"args => <FunctionalList {...args} />",...(a=(r=e.parameters)==null?void 0:r.docs)==null?void 0:a.source}}};const k=["functionalList"];export{k as __namedExportsOrder,g as default,e as functionalList};
//# sourceMappingURL=FunctionalList.stories-95463f86.js.map
