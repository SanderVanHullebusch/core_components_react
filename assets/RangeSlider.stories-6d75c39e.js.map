{"version":3,"file":"RangeSlider.stories-6d75c39e.js","sources":["../../../../packages/antwerp-ui/react-components/src/lib/atoms/range-slider/RangeSliderBar.tsx","../../../../packages/antwerp-ui/react-components/src/lib/atoms/range-slider/RangeSliderHandle.tsx","../../../../packages/antwerp-ui/react-components/src/lib/atoms/range-slider/RangeSlider.tsx"],"sourcesContent":["import { RangeSliderBarProps } from './RangeSlider.types';\n\nexport function RangeSliderBar({ start, end, range, min, getPositionFromValue }: RangeSliderBarProps) {\n  return (\n    <div\n      className=\"a-range-slider__bar\"\n      style={{\n        left: range ? getPositionFromValue(start) + 'px' : '',\n        width: range && end ? getPositionFromValue(end + min - start) + 'px' : getPositionFromValue(start) + 'px'\n      }}\n    ></div>\n  );\n}\n\nexport default RangeSliderBar;\n","import { getPositionValue } from '../../../utils/math.utils';\nimport React from 'react';\nimport { RangeSliderHandleProps } from './RangeSlider.types';\n\nexport function RangeSliderHandle({\n  value,\n  min,\n  max,\n  sliderMin,\n  sliderMax,\n  step,\n  direction,\n  sliderPos,\n  onUpdate,\n  getPositionFromValue,\n  ariaLabel\n}: RangeSliderHandleProps) {\n  const [limit, setLimit] = React.useState(0);\n  const handleRef = React.useRef(null);\n\n  React.useEffect(() => {\n    if (sliderPos) {\n      setLimit(sliderPos);\n    }\n  }, [direction, sliderPos]);\n\n  const handleNoop = (e: MouseEvent | React.TouchEvent) => {\n    e.stopPropagation();\n    e.preventDefault();\n  };\n\n  const handleStart = () => {\n    document.addEventListener('mousemove', handleDrag);\n    document.addEventListener('mouseup', handleEnd);\n  };\n\n  const handleDrag = (e: MouseEvent | React.TouchEvent) => {\n    e.type === 'mousemove' ? handleNoop(e) : e.stopPropagation();\n    const value = position(e);\n    return onUpdate && onUpdate(value);\n  };\n\n  const handleEnd = (e: MouseEvent | React.TouchEvent) => {\n    document.removeEventListener('mousemove', handleDrag);\n    document.removeEventListener('mouseup', handleEnd);\n    const value = position(e);\n    return onUpdate && onUpdate(value);\n  };\n\n  const position = (e: MouseEvent | React.TouchEvent) => {\n    return getPositionValue(e, limit, step, min, max, sliderMin, sliderMax, direction);\n  };\n\n  const handleKeyPress = (e: React.KeyboardEvent<HTMLDivElement>) => {\n    let newValue = value;\n    if (e.key === 'ArrowUp' || e.key === 'ArrowRight') {\n      e.preventDefault();\n      newValue += step;\n    } else if (e.key === 'ArrowDown' || e.key === 'ArrowLeft') {\n      e.preventDefault();\n      newValue -= step;\n    } else if (e.key === 'End') {\n      e.preventDefault();\n      newValue = max;\n    } else if (e.key === 'Home') {\n      e.preventDefault();\n      newValue = min;\n    }\n    if (newValue >= min && newValue <= max) {\n      onUpdate(newValue);\n    }\n  };\n  return (\n    <div\n      className=\"a-range-slider__handle\"\n      tabIndex={0}\n      style={{\n        left: getPositionFromValue(value) + `px`\n      }}\n      onMouseDown={handleStart}\n      onTouchEnd={handleNoop}\n      onTouchMove={handleDrag}\n      onKeyDown={handleKeyPress}\n      role=\"slider\"\n      aria-orientation=\"horizontal\"\n      aria-valuemax={max}\n      aria-valuemin={min}\n      aria-valuenow={value}\n      aria-label={ariaLabel}\n      ref={handleRef}\n    ></div>\n  );\n}\n\nexport default RangeSliderHandle;\n","import React, { MouseEvent } from 'react';\nimport { getPositionValue, getSteps, lineValuesToPosition } from '../../../utils/math.utils';\nimport { Icon } from '../../base/icon';\nimport { RangeSliderProps } from './RangeSlider.types';\nimport { RangeSliderBar } from './RangeSliderBar';\nimport { RangeSliderHandle } from './RangeSliderHandle';\n\nexport function RangeSlider({\n  label,\n  start = RangeSlider.defaultProps.start,\n  end,\n  min = RangeSlider.defaultProps.min,\n  max = RangeSlider.defaultProps.max,\n  step = RangeSlider.defaultProps.step,\n  unit = RangeSlider.defaultProps.unit,\n  minRange = RangeSlider.defaultProps.minRange,\n  range = RangeSlider.defaultProps.range,\n  labelStart,\n  labelEnd,\n  iconStart,\n  iconEnd,\n  ariaLabelMin,\n  ariaLabelMax,\n  tickMarks,\n  qa,\n  onChange\n}: RangeSliderProps) {\n  const [limit, setLimit] = React.useState(0);\n  const [sliderPos, setSliderPos] = React.useState(0);\n  const [direction, setDirection] = React.useState(0);\n  const sliderRef = React.useRef(null);\n\n  React.useEffect(() => {\n    window.addEventListener('resize', handleResize);\n    handleResize();\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  const handleResize = () => {\n    if (sliderRef.current) {\n      const sliderPosition = sliderRef.current['offsetWidth'];\n      const node = sliderRef.current as HTMLElement;\n      if (node && node instanceof HTMLElement) {\n        const dir = node.getBoundingClientRect().left;\n        setDirection(dir);\n      }\n      setLimit(sliderPosition);\n      setSliderPos(sliderPosition);\n    }\n  };\n\n  const handleUpdateStart = (s: number) => {\n    if (range && end && minRange && end - s < minRange) return;\n    return onChange && onChange(s, range ? end : undefined);\n  };\n\n  const handleUpdateEnd = (e: number) => {\n    if (start && minRange && e - start < minRange) return;\n    return onChange && onChange(start, e);\n  };\n\n  const getPositionFromValue = (value: number) => lineValuesToPosition(value, min, max, limit);\n\n  const position = (e: MouseEvent | React.TouchEvent) => {\n    return getPositionValue(e, limit, step, min, max, min, max, direction);\n  };\n\n  const updateHandleValue = (e: MouseEvent) => {\n    const newPosition = position(e);\n    if (range && end && Math.abs(newPosition - end) < Math.abs(newPosition - start)) {\n      handleUpdateEnd(newPosition);\n      return;\n    }\n    handleUpdateStart(newPosition);\n  };\n\n  return (\n    <div className=\"a-range-slider\" data-qa={qa} ref={sliderRef}>\n      <div className=\"a-range-slider__labels\">\n        <div className=\"a-range-slider__label\">{label}</div>\n        <div className=\"a-range-slider__label\">\n          {range ? `${start} - ${end}` : `${start}`}\n          {` ${unit}`}\n        </div>\n      </div>\n      <div className=\"a-range-slider__inner\" onClick={updateHandleValue}>\n        {tickMarks && (\n          <div className=\"a-range-slider__tickmarks\">\n            {getSteps(min, max, step).map((st) => (\n              <div key={st} className=\"a-range-slider__tickmark\"></div>\n            ))}\n          </div>\n        )}\n        <RangeSliderBar start={start} end={end} getPositionFromValue={getPositionFromValue} range={!!range} min={min} />\n        <RangeSliderHandle\n          value={start}\n          onUpdate={handleUpdateStart}\n          min={min}\n          max={range && minRange ? max - minRange : max}\n          sliderMin={min}\n          sliderMax={max}\n          step={step}\n          sliderPos={sliderPos}\n          direction={direction}\n          getPositionFromValue={getPositionFromValue}\n          ariaLabel={ariaLabelMin}\n        />\n        {range && typeof minRange === 'number' && typeof end === 'number' && (\n          <RangeSliderHandle\n            value={end}\n            onUpdate={handleUpdateEnd}\n            min={min + minRange}\n            max={max}\n            sliderMin={min}\n            sliderMax={max}\n            step={step}\n            sliderPos={sliderPos}\n            direction={direction}\n            getPositionFromValue={getPositionFromValue}\n            ariaLabel={ariaLabelMax}\n          />\n        )}\n      </div>\n      <div className=\"a-range-slider__descriptions\">\n        <div className=\"a-range-slider__description small\">\n          {labelStart}\n          {iconStart ? <Icon name={iconStart} /> : null}\n        </div>\n        <div className=\"a-range-slider__description small\">\n          {labelEnd}\n          {iconEnd ? <Icon name={iconEnd} /> : null}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nRangeSlider.defaultProps = {\n  start: 0,\n  min: 0,\n  max: 10,\n  step: 1,\n  unit: '',\n  minRange: 1,\n  range: false,\n  ariaLabelMin: 'Minimum',\n  ariaLabelMax: 'Maximimum'\n};\n\nexport default RangeSlider;\n"],"names":["RangeSliderBar","start","end","range","min","getPositionFromValue","left","width","RangeSliderHandle","value","max","sliderMin","sliderMax","step","direction","sliderPos","onUpdate","ariaLabel","limit","setLimit","React","useState","handleRef","useRef","useEffect","handleNoop","__name","e","stopPropagation","preventDefault","handleStart","addEventListener","handleDrag","handleEnd","type","position","removeEventListener","getPositionValue","handleKeyPress","newValue","key","RangeSlider","label","defaultProps","unit","minRange","labelStart","labelEnd","iconStart","iconEnd","ariaLabelMin","ariaLabelMax","tickMarks","qa","onChange","setSliderPos","setDirection","sliderRef","handleResize","window","current","sliderPosition","node","HTMLElement","dir","getBoundingClientRect","handleUpdateStart","s","undefined","handleUpdateEnd","lineValuesToPosition","updateHandleValue","newPosition","Math","abs","_jsxs","_jsx","getSteps","map","st","Icon"],"mappings":"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"}