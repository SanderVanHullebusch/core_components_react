var _=Object.defineProperty;var r=(t,o)=>_(t,"name",{value:o,configurable:!0});import{Q as k}from"./stories.settings-7ac24d87.js";import{c as d}from"./dom.utils-bd8c7a66.js";import{I as C}from"./Icon-859096df.js";import{S as M,D as j}from"./layout.settings-9902fce9.js";import{r as q,a as A}from"./input.renders-0ca7929f.js";import{a as s,j as l}from"./jsx-runtime-bb315772.js";import"./settings-2cad0569.js";import"./log.utils-f56af116.js";import"./index-d23035ce.js";import"./es.object.get-own-property-descriptor-89e834e9.js";function h({description:t,disabled:o,id:a,inline:n,label:y,name:f,options:b,placeholder:i,required:g,size:p,state:c,value:m,onChange:u,qa:v}){const S=r(e=>u&&u(e),"handleChange"),w=d({"a-input":!0,"has-icon-right":!0,"a-input--inline":!!n,[`a-input--${M[p||j]}`]:!!p,"has-error":c==="error"}),T=d({"a-input__wrapper":!0,"a-input__wrapper--inline":!!n});return s("div",{className:w,"data-qa":v,children:[q({label:y,id:a,required:g,inline:n}),A({id:a,description:t,state:c}),s("div",{className:T,children:[s("select",{disabled:o,name:f,id:a,value:m,defaultValue:!m&&i||void 0,onChange:S,children:[l("option",{disabled:!0,children:i}),(b||[]).map((e,x)=>l("option",{value:e.value,disabled:e.disabled,children:e.label},`${e.value}-${x}`))]}),l(C,{name:"arrow-down-1"})]})]})}r(h,"Select");h.defaultProps={placeholder:"Maak een keuze"};const O={title:"React/Atoms/Select",component:h,parameters:{docs:{description:{component:"Use the selection input field when the user needs to make a specific selection in a form. Specifically when you have a limited number of options and there is no sufficient place to display these options. Also use a selection field for data with a specific pattern such as time."}}},args:{id:"select-story",inline:!1,label:"Select example",name:"select-story",disabled:!1,required:!1,placeholder:"Make your choice",options:[{value:"first",label:"First option"},{value:"second",label:"Second option"},{value:"third",label:"Third option"},{value:"fourth",label:"Fourth option"}]},argTypes:{id:{control:{type:"text"},table:{type:{summary:"string"}},description:"The `id` prop set on the `select` HTML element."},inline:{control:{type:"boolean"},table:{type:{summary:"boolean"},defaultValue:{summary:!1}},description:"The `inline` prop when set to `true` sets the style of the `Select` component to inline."},label:{control:{type:"text"},table:{type:{summary:"string"}},description:"A `Select` features at least a label atop or to the left side of the component."},name:{control:{type:"text"},table:{type:{summary:"string"}},description:"The `name` prop sets the `name` attribute on the `select` HTML element."},placeholder:{control:{type:"text"},table:{type:{summary:"string"},defaultValue:{summary:"Maak een keuze"}},description:"Sets a placeholder value for the `Select` component."},disabled:{control:{type:"boolean"},table:{type:{summary:"boolean"},defaultValue:{summary:!1}},description:"The `disabled` prop will disable inputs on the `Select` component when set to `true`."},required:{control:{type:"boolean"},table:{type:{summary:"boolean"},defaultValue:{summary:!1}},description:"Setting the `required` prop to `true` will mark the `Select` component as `required` and an asterisk will be placed next to the label to mark it as such."},description:{control:{type:"text"},table:{type:{summary:"string"}},description:"The `Select` component can have a small descriptive text above its `select` field."},size:{control:{type:"select"},options:["small","medium","large"],table:{type:{summary:"string"}},description:"The `size` prop will change the height of the `Select` component. Can be omitted for `medium`."},state:{control:{type:"select"},options:["","success","error"],table:{type:{summary:"string"}},description:"Whenever an input field is associated with a success or error state, the border of the container will match to that thematic colour as well as display a message (the `description` prop) above the container together with an identifiable icon."},value:{control:{type:"text"},table:{type:{summary:"string"}},description:"The `value` prop sets the selected value for the `Select` component. This prop turns the component into a controlled component. To be used along with `onChange`."},options:{control:{type:"object"},table:{type:{summary:"object"},defaultValue:{summary:"[]"}},description:'The `options` prop is an array of objects in the format `{ value: "string", label: "string", disabled?: boolean }`. It sets the `option` HTML elements in `Select` component.'},onChange:{control:{type:"function"},table:{type:{summary:"function"}},action:"onChange",description:"Function triggered when the `Select` value has changed. The first parameter of this function is of type `(React).ChangeEvent`."},qa:k}},$="",Q=["select"];export{Q as __namedExportsOrder,O as default,$ as select};
//# sourceMappingURL=Select.stories-5b8638d0.js.map
