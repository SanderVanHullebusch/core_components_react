{"version":3,"file":"Table.stories-03a30321.js","sources":["../../../../packages/antwerp-ui/react-components/src/lib/atoms/table/TableHeader.tsx","../../../../packages/antwerp-ui/react-components/src/lib/atoms/table/TableBody.tsx","../../../../packages/antwerp-ui/react-components/src/lib/atoms/table/Table.tsx"],"sourcesContent":["import { SORT_ASCENDING, SORT_DESCENDING } from '../../../constants/settings';\nimport { classNames } from '../../../utils/dom.utils';\nimport { wrapWithIf } from '../../../utils/render.utils';\nimport { Checkbox } from '../checkbox';\nimport { TableHeaderProps } from './Table.types';\n\nexport function TableHeader({\n  columns,\n  selectable,\n  selected = [],\n  rows = [],\n  onSelectAll,\n  sort,\n  small,\n  sortDirection,\n  tableId,\n  onSortClick,\n  actions\n}: TableHeaderProps) {\n  const allSelected =\n    selected.length &&\n    selected.sort().join(',') ===\n      rows\n        .map((r) => r.id)\n        .sort()\n        .join(',');\n\n  return (\n    <thead>\n      <tr>\n        {selectable ? (\n          <th>\n            <Checkbox\n              name={`aui-table-checkbox-${tableId}-all`}\n              id={`aui-table-checkbox-${tableId}-all`}\n              checked={!!allSelected}\n              indeterminate={!!selected.length && !allSelected}\n              onChange={onSelectAll}\n              label=\"selecteren\"\n              showLabel={false}\n            />\n          </th>\n        ) : null}\n        {columns.map((col) => {\n          const thClasses = classNames({\n            'u-text-right': !!col.alignRight,\n            'is-collapsed': !!col.sortable,\n            'is-condensed': !!small\n          });\n\n          const isAscending = sort === col?.value && sortDirection === SORT_ASCENDING;\n          const isDescending = sort === col?.value && sortDirection === SORT_DESCENDING;\n\n          const thSortClasses = classNames({\n            'a-table__sort-button': true,\n            'a-table__sort-button--unsorted': sort !== col?.value,\n            'a-table__sort-button--sorted-asc': isAscending,\n            'a-table__sort-button--sorted-desc': isDescending\n          });\n\n          return (\n            <th\n              key={col?.value}\n              className={thClasses}\n              {...(col.sortable &&\n                (isAscending || isDescending) && { 'aria-sort': isAscending ? SORT_ASCENDING : SORT_DESCENDING })}\n              {...(col.sortable && { 'aria-live': 'polite' })}\n            >\n              {wrapWithIf(\n                col?.label,\n                <button onClick={(e) => onSortClick && onSortClick(col.value)} className={thSortClasses}></button>,\n                !!col?.sortable\n              )}\n            </th>\n          );\n        })}\n        {actions?.buttons?.length ? <th>{actions?.label}</th> : null}\n      </tr>\n    </thead>\n  );\n}\n\nexport default TableHeader;\n","import { SyntheticEvent } from 'react';\nimport { classNames } from '../../../utils/dom.utils';\nimport { wrapWithIf } from '../../../utils/render.utils';\nimport { Button } from '../button';\nimport { Checkbox } from '../checkbox';\nimport { TableBodyProps, TableRowSchema } from './Table.types';\n\nexport function TableBody({\n  actions,\n  columns,\n  small,\n  tableId,\n  selectable,\n  onSelect,\n  selected = [],\n  rows\n}: TableBodyProps) {\n  const rowClasses = classNames({\n    'is-clickable': !!selectable\n  });\n\n  const selectRow = (event: SyntheticEvent, row: TableRowSchema) => {\n    const target = event.target as Element;\n    if (target?.classList.contains('a-button') || target.parentElement?.parentElement?.classList.contains('a-button')) {\n      return false;\n    }\n    event.preventDefault();\n    event.stopPropagation();\n    return selectable && onSelect && onSelect(row.id);\n  };\n\n  return (\n    <tbody>\n      {rows.map((row) => (\n        <tr onClick={(e) => selectRow(e, row)} className={rowClasses} key={row?.id}>\n          {selectable ? (\n            <td>\n              <Checkbox\n                name={`aui-table-checkbox-${tableId}-${row.id}`}\n                id={`aui-table-checkbox-row-${tableId}-${row.id}`}\n                checked={(selected || []).includes(row.id)}\n                onChange={(e) => selectRow(e, row)}\n                label={row.checkboxLabel}\n                showLabel={false}\n              />\n            </td>\n          ) : null}\n          {columns.map((col) => {\n            const tdClasses = classNames({\n              'u-text-right': !!col.alignRight,\n              'u-text-bold': col.dataType === 'primary',\n              small: col.dataType === 'secondary',\n              'is-condensed': !!small\n            });\n            return (\n              <td className={tdClasses} key={col?.value}>\n                {col.transformFunction ? col.transformFunction(row[col?.value] || null) : row[col?.value] || null}\n              </td>\n            );\n          })}\n          {wrapWithIf(\n            actions?.buttons?.map((x) => (\n              <Button\n                onClick={(ev) => x?.onActionClick && x?.onActionClick(ev, row.id)}\n                key={`aui-table-action-${tableId}-${x?.id}-${row.id}`}\n                {...x}\n                id={`aui-table-action-${tableId}-${x?.id}-${row.id}`}\n                size={x?.size || 'small'}\n                children={x?.label || x?.children}\n              />\n            )) || null,\n            <td></td>,\n            !!actions?.buttons?.length\n          )}\n        </tr>\n      ))}\n    </tbody>\n  );\n}\n\nexport default TableBody;\n","import { TableProps } from './Table.types';\nimport { classNames } from '../../../utils/dom.utils';\nimport { TableHeader } from './TableHeader';\nimport { TableBody } from './TableBody';\nimport { useHorizontalScroll } from '../../../utils/custom.hooks';\n\nexport function Table({\n  id,\n  sort,\n  sortDirection,\n  rows,\n  columns,\n  qa,\n  striped,\n  small,\n  open,\n  selectable,\n  selected,\n  onSelect,\n  onSelectAll,\n  onSortClick,\n  actions,\n  responsive,\n  fixedColumnRight,\n  fixedColumnLeft\n}: TableProps) {\n  const [scrollDivRef, handleScroll, isScrollStart, isScrollEnd] = useHorizontalScroll();\n\n  const tableClasses = classNames({\n    'a-table': true,\n    'a-table--striped': !!striped,\n    'a-table--open': !!open\n  });\n\n  const responsiveWrapperClasses = classNames({\n    'a-table-responsive-wrapper': !!responsive,\n    'has-shadow-left': !!responsive && !isScrollStart,\n    'has-shadow-right': !!responsive && !isScrollEnd,\n    'has-first-column-fixed': !!fixedColumnLeft,\n    'has-last-column-fixed': !!fixedColumnRight\n  });\n\n  const table = (\n    <table id={id} className={tableClasses} data-qa={qa}>\n      <TableHeader\n        tableId={id}\n        small={small}\n        selectable={selectable}\n        selected={selected}\n        columns={columns}\n        sort={sort}\n        rows={rows}\n        onSortClick={onSortClick}\n        sortDirection={sortDirection}\n        onSelectAll={onSelectAll}\n        actions={actions}\n      />\n      <TableBody\n        tableId={id}\n        small={small}\n        selectable={selectable}\n        selected={selected}\n        columns={columns}\n        rows={rows}\n        onSelect={onSelect}\n        actions={actions}\n      />\n    </table>\n  );\n\n  return responsive ? (\n    <div className={responsiveWrapperClasses} data-qa={qa}>\n      <div ref={scrollDivRef} onScroll={handleScroll} className=\"a-table-scrollable-wrapper\">\n        {table}\n      </div>\n    </div>\n  ) : (\n    table\n  );\n}\n\nTable.defaultProps = {\n  id: 'aui-table',\n  columns: [],\n  rows: [],\n  responsive: true\n};\n\nexport default Table;\n"],"names":["TableHeader","columns","selectable","selected","rows","onSelectAll","sort","small","sortDirection","tableId","onSortClick","actions","allSelected","length","join","map","r","id","_jsx","Checkbox","col","thClasses","classNames","alignRight","sortable","isAscending","value","SORT_ASCENDING","isDescending","SORT_DESCENDING","thSortClasses","wrapWithIf","label","e","buttons","TableBody","onSelect","rowClasses","selectRow","__name","event","row","target","classList","contains","parentElement","preventDefault","stopPropagation","includes","checkboxLabel","tdClasses","dataType","transformFunction","x","Button","onActionClick","ev","size","children","Table","qa","striped","open","responsive","fixedColumnRight","fixedColumnLeft","scrollDivRef","handleScroll","isScrollStart","isScrollEnd","useHorizontalScroll","tableClasses","responsiveWrapperClasses","table","defaultProps"],"mappings":"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"}