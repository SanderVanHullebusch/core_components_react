{"version":3,"file":"render.utils-c5585470.js","sources":["../../../../packages/antwerp-ui/react-components/src/utils/render.utils.tsx"],"sourcesContent":["import { cloneElement, ReactElement, ReactNode } from 'react';\nimport { Link } from '../constants/application.types';\nimport { Size } from '../constants/layout.settings';\nimport { Avatar } from '../lib/atoms/avatar';\nimport { ButtonAddOnProps } from '../lib/atoms/button/Button.types';\nimport { Spinner } from '../lib/atoms/spinner';\nimport { Icon } from '../lib/base/icon';\n\nexport function wrapWithIf(toWrap: ReactNode, wrapper: ReactElement, condition: boolean): ReactNode {\n  return condition ? cloneElement(wrapper, { children: toWrap }) : (toWrap as JSX.Element);\n}\n\nexport function renderHTMLLink(\n  link: Link,\n  icon?: string,\n  props?: { className?: string; 'aria-labelledby'?: string }\n): ReactNode {\n  if (!link?.href) {\n    return link?.label || '';\n  }\n  return (\n    <a href={link.href} target={link.target || '_self'} {...props}>\n      {link.label || ''}\n      {icon ? <Icon name={icon} /> : null}\n    </a>\n  );\n}\n\nexport function labelWrapper(children: ReactElement, label?: string, id?: string, labelId?: string) {\n  if (label) {\n    return (\n      <div className=\"a-input\">\n        <label className=\"a-input__label\" id={labelId} htmlFor={id}>\n          {label}\n        </label>\n        {children}\n      </div>\n    );\n  } else {\n    return children;\n  }\n}\n\nexport function renderAddOn(addOn?: ButtonAddOnProps, size?: 'small' | 'medium' | 'large'): JSX.Element | null {\n  if (addOn?.type === 'spinner') {\n    return <Spinner ariaHidden size={size === Size.S ? Size.XS : Size.S} />;\n  } else if (addOn?.type === 'avatar') {\n    return <Avatar {...addOn?.avatarProps} size={size} />;\n  } else if (addOn?.type === 'icon') {\n    return <Icon {...addOn?.iconProps} />;\n  }\n  return null;\n}\n"],"names":["wrapWithIf","toWrap","wrapper","condition","cloneElement","children","renderHTMLLink","link","icon","props","href","target","label","Icon","labelWrapper","id","labelId","_jsx","renderAddOn","addOn","size","type","Spinner","Size","S","XS","Avatar","avatarProps","iconProps"],"mappings":"wVAQgBA,SAAAA,EAAWC,EAAmBC,EAAuBC,EAA+B,CAC3FA,OAAAA,EAAYC,uBAAaF,EAAS,CAAEG,SAAUJ,CAAQ,CAAA,EAAKA,CACpE,CAFgBD,EAAAA,EAAAA,cAIAM,SAAAA,EACdC,EACAC,EACAC,EACW,CACP,OAACF,GAAAA,MAAAA,EAAMG,OAIT,IAAA,CAAG,KAAMH,EAAKG,KAAM,OAAQH,EAAKI,QAAU,QAAQ,GAAKF,EAAK,SAC1DF,CAAAA,EAAKK,OAAS,GACdJ,IAAQK,EAAI,CAAC,KAAML,CAAK,CAAA,EAAM,IAAI,CAAA,CACjC,GANGD,GAAAA,YAAAA,EAAMK,QAAS,EAQ1B,CAdgBN,EAAAA,EAAAA,kBAgBT,SAASQ,EAAaT,EAAwBO,EAAgBG,EAAaC,EAAkB,CAClG,OAAIJ,IAEA,MAAA,CAAK,UAAU,UAAS,SACtB,CAAAK,EAAA,QAAA,CAAO,UAAU,iBAAiB,GAAID,EAAS,QAASD,EAAG,SACxDH,CAAK,CAAA,EAEPP,CAAQ,CAAA,CACL,EAGDA,CAEX,CAbgBS,EAAAA,EAAAA,gBAeAI,SAAAA,EAAYC,EAA0BC,EAAyD,CACzGD,OAAAA,GAAAA,YAAAA,EAAOE,QAAS,YACVC,EAAO,CAAC,WAAU,GAAC,KAAMF,IAASG,EAAKC,EAAID,EAAKE,GAAKF,EAAKC,CAAAA,CAAK,GAC9DL,GAAAA,YAAAA,EAAOE,QAAS,WACjBK,EAAM,CAAA,GAAKP,GAAAA,YAAAA,EAAOQ,YAAa,KAAAP,CAAA,CAAc,GAC5CD,GAAAA,YAAAA,EAAOE,QAAS,SACjBR,EAAI,CAAA,GAAKM,GAAAA,YAAAA,EAAOS,SAAAA,CAAa,EAEhC,IACT,CATgBV,EAAAA,EAAAA"}